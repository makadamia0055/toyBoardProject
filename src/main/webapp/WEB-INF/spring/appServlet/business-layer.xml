<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 컴포넌트 스캔 코드. -->
	<context:component-scan base-package="com.ppl.toyboard.root" />
	
	<!-- properties 파일 등록 -->
	<context:property-placeholder location="classpath:properties/*.properties"/>
	
	
	<!-- aop 스캔 등록 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	

	
	<!-- dataSource 설정 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
	destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<mvc:annotation-driven>
	   <mvc:message-converters>
	       <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	   </mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 트랜잭션 설정 -->
	<tx:annotation-driven/>
	
	<!-- jpa 오류 변환기 등록 -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	<!-- jpa VendorAdapter 등록 -->
	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter"></property>
 		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml"></property>
		<property name="packagesToScan" value="com.ppl.toyboard.root.entity"></property>
		
	</bean>
	
	<!-- aop 포인트컷 등록 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.ppl.toyboard.root.service..*(..))" id="allPointcut"/>
	
	</aop:config>
	
	<!-- Transaction 설정 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	
	</bean>
	
	<!-- redis설정 -->
	<bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory">
		<constructor-arg>
			<bean class="org.springframework.data.redis.connection.RedisStandaloneConfiguration">
				<property name="hostName" value="localhost" />
            	<property name="port" value="6379" />
			</bean>
		
		</constructor-arg>
	</bean>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
	</bean> 
	<!-- <bean class="org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean">
		<constructor-arg name="repositoryInterface" value="com.ppl.toyboard.root.dao.RedisDAO"/>
	
	</bean> -->
	
	<!-- 캐시 매니저 설정은 나중에 -->
	
	<!-- 필터 등록 -->
	<bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>
	
	<bean id="VerifyUserFilter" class="com.ppl.toyboard.root.filter.VerifyUserFilter" />
	
	<bean id="JwtFilter" class="com.ppl.toyboard.root.filter.JwtFilter" />
	
	<!-- 필터 체이닝 구성 -->
	<bean id="myFilter1Proxy" class="org.springframework.web.filter.DelegatingFilterProxy">
	    <property name="targetBeanName" value="VerifyUserFilter" />
	</bean>
	
	<bean id="myFilter2Proxy" class="org.springframework.web.filter.DelegatingFilterProxy">
	    <property name="targetBeanName" value="JwtFilter" />
	</bean>
</beans>
